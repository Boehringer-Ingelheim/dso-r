[{"path":"/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Changelog","title":"Changelog","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"backwards-incompatible-changes","dir":"","previous_headings":"v0.7","what":"Backwards-incompatible changes","title":"Changelog","text":"Remove safe_get, dsoParams class already checks existance keys","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"new-features","dir":"","previous_headings":"v0.6","what":"New Features","title":"Changelog","text":"Introduced repro function performs dso repro single stage without dependencies Introduced corresponding rstudio addins repro function","code":""},{"path":"/CHANGELOG.html","id":"fixes","dir":"","previous_headings":"v0.6","what":"Fixes","title":"Changelog","text":"Removed ... reload function","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"improvements","dir":"","previous_headings":"v0.5.1","what":"Improvements","title":"Changelog","text":"Fixed reload() function dsoParams","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"new-features-1","dir":"","previous_headings":"v0.5.0","what":"New Features","title":"Changelog","text":"Introduced reload() function dsoParams","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"improvements-1","dir":"","previous_headings":"v0.4.4","what":"Improvements","title":"Changelog","text":"Improved error handling read_params()","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"improvements-2","dir":"","previous_headings":"v0.4.3","what":"Improvements","title":"Changelog","text":"updated .Rbuildignore ignoring package redundant files added precommit configs included methods show set class dsoParams object fixed R CMD check warnings","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"improvements-3","dir":"","previous_headings":"v0.4.2","what":"Improvements","title":"Changelog","text":"Improved compatibility dsoParams list operations","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"improvements-4","dir":"","previous_headings":"v0.4.1","what":"Improvements","title":"Changelog","text":"Improve readability dsoParams object using read_params()","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"new-features-2","dir":"","previous_headings":"v0.4.0","what":"New Features","title":"Changelog","text":"Introduction dsoParams class automatically returned read_params() . list list type prohibits return NULL incorrect access, making use parameters much safer stable. Added testthat testing Modified read_params() default return value dsoParams object, added argument standard list lists can returned.","code":""},{"path":[]},{"path":"/CHANGELOG.html","id":"new-features-3","dir":"","previous_headings":"v0.3.1","what":"New Features","title":"Changelog","text":"Added safe_get function safely retrieve configuration list list calls. Added testing testthat","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007 Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Schreyer. Author, maintainer. Gregor Sturm. Author. Thomas Schwarzl. Author. Alexander Peltzer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schreyer D, Sturm G, Schwarzl T, Peltzer (2025). dso: dso R companion package. R package version 0.7.","code":"@Manual{,   title = {dso: dso R companion package},   author = {Daniel Schreyer and Gregor Sturm and Thomas Schwarzl and Alexander Peltzer},   year = {2025},   note = {R package version 0.7}, }"},{"path":"/index.html","id":"dso-r-r-companion-package-for-dso","dir":"","previous_headings":"","what":"dso R companion package","title":"dso R companion package","text":"purpose package provide access files configuration organized dso project. provides two main functions: read_params(stage_path) loads configuration specified stage dsoParams R object can accessed like list. stage name must relative project root. function works independent current working directory, long subdirectory project. reload(object) reloads config loaded read_params. Usage: reload(params) stage_here(rel_path) inspired (). () resolves paths relative project root stage_here() resolves paths relative stage specified read_params. Additionally, dso-r provides R interface important CLI commands dso.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"dso R companion package","text":"now, just possible install development version GitHub:","code":"remotes::install_github(\"Boehringer-Ingelheim/dso-r\")"},{"path":"/reference/as.list-dsoParams-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom as.list method for dsoParams class — as.list,dsoParams-method","title":"Custom as.list method for dsoParams class — as.list,dsoParams-method","text":"Custom .list method dsoParams class","code":""},{"path":"/reference/as.list-dsoParams-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom as.list method for dsoParams class — as.list,dsoParams-method","text":"","code":"# S4 method for class 'dsoParams' as.list(x)"},{"path":"/reference/as.list-dsoParams-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom as.list method for dsoParams class — as.list,dsoParams-method","text":"x dsoParams object","code":""},{"path":"/reference/as.list-dsoParams-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom as.list method for dsoParams class — as.list,dsoParams-method","text":"list","code":""},{"path":"/reference/cash-.dsoParams.html","id":null,"dir":"Reference","previous_headings":"","what":"overriding the the $ operator to add secure list calling so that it cannot return NULL when call does not exist — $.dsoParams","title":"overriding the the $ operator to add secure list calling so that it cannot return NULL when call does not exist — $.dsoParams","text":"overriding $ operator add secure list calling return NULL call exist","code":""},{"path":"/reference/cash-.dsoParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overriding the the $ operator to add secure list calling so that it cannot return NULL when call does not exist — $.dsoParams","text":"","code":"# S3 method for class 'dsoParams' x$name"},{"path":"/reference/cash-.dsoParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overriding the the $ operator to add secure list calling so that it cannot return NULL when call does not exist — $.dsoParams","text":"x dsoParams object name field name","code":""},{"path":"/reference/compile_config.html","id":null,"dir":"Reference","previous_headings":"","what":"compile_config — compile_config","title":"compile_config — compile_config","text":"Run dso compile-config","code":""},{"path":"/reference/compile_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compile_config — compile_config","text":"","code":"compile_config(dir = getwd())"},{"path":"/reference/compile_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compile_config — compile_config","text":"dir directory (including subdirectories relevant parent files) compile. default compiles current working directory.","code":""},{"path":"/reference/compile_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compile_config — compile_config","text":"function runs dso compile-config command updates params.yaml info params..yaml params.yaml.","code":""},{"path":"/reference/compile_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"compile_config — compile_config","text":"","code":"if (FALSE) { # \\dontrun{ compile_config() } # }"},{"path":"/reference/create_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"create_stage — create_stage","title":"create_stage — create_stage","text":"creates new stage","code":""},{"path":"/reference/create_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_stage — create_stage","text":"","code":"create_stage(dir = here::here(), name = \"\", description = \"\")"},{"path":"/reference/create_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_stage — create_stage","text":"dir path directory stage shall created name stage name: e.g. 01_preprocessing. empty description short stage description. empty","code":""},{"path":"/reference/create_stage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_stage — create_stage","text":"Creates new stage given directory.","code":""},{"path":"/reference/create_stage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_stage — create_stage","text":"","code":"if (FALSE) { # \\dontrun{ create_stage(name = \"01_preprocessing\", description = \"Sequencing Preprocessing\") } # }"},{"path":"/reference/dsoParams-class.html","id":null,"dir":"Reference","previous_headings":"","what":"dsoParams class — dsoParams-class","title":"dsoParams class — dsoParams-class","text":"dsoParams class","code":""},{"path":"/reference/dsoParams-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"dsoParams class — dsoParams-class","text":"params list lists containing parameters","code":""},{"path":"/reference/dsoParams.html","id":null,"dir":"Reference","previous_headings":"","what":"dsoParams: list with safe access — dsoParams","title":"dsoParams: list with safe access — dsoParams","text":"\"dsoParams\" constructor:","code":""},{"path":"/reference/dsoParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dsoParams: list with safe access — dsoParams","text":"","code":"dsoParams(x = list())"},{"path":"/reference/dsoParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dsoParams: list with safe access — dsoParams","text":"x empty, recursive list lists converted dsoParams","code":""},{"path":"/reference/dsoParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dsoParams: list with safe access — dsoParams","text":"","code":"# initiating empty params <- dsoParams()  # converting a list of list  params <- list() params$a <- \"bla\" params$b <- list() params$b$c <- \"blub\" params <- dsoParams(params)"},{"path":"/reference/dso_repro_stage_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute dso repro and display the result — dso_repro_stage_addin","title":"Execute dso repro and display the result — dso_repro_stage_addin","text":"function reproduces current stage without dependencies displays resulting report RStudio Viewer pane.","code":""},{"path":"/reference/dso_repro_stage_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute dso repro and display the result — dso_repro_stage_addin","text":"","code":"dso_repro_stage_addin()"},{"path":"/reference/dso_repro_stage_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute dso repro and display the result — dso_repro_stage_addin","text":"None","code":""},{"path":"/reference/dso_repro_stage_addin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute dso repro and display the result — dso_repro_stage_addin","text":"","code":"if (FALSE) { # \\dontrun{ dso_repro_stage_addin() } # }"},{"path":"/reference/dso_repro_stage_w_dependencies_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute dso repro with dependencies and display the result — dso_repro_stage_w_dependencies_addin","title":"Execute dso repro with dependencies and display the result — dso_repro_stage_w_dependencies_addin","text":"function reproduces current stage along dependencies displays resulting report RStudio Viewer pane.","code":""},{"path":"/reference/dso_repro_stage_w_dependencies_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute dso repro with dependencies and display the result — dso_repro_stage_w_dependencies_addin","text":"","code":"dso_repro_stage_w_dependencies_addin()"},{"path":"/reference/dso_repro_stage_w_dependencies_addin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute dso repro with dependencies and display the result — dso_repro_stage_w_dependencies_addin","text":"None","code":""},{"path":"/reference/dso_repro_stage_w_dependencies_addin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute dso repro with dependencies and display the result — dso_repro_stage_w_dependencies_addin","text":"","code":"if (FALSE) { # \\dontrun{ dso_repro_stage_w_dependencies_addin() } # }"},{"path":"/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"init — init","title":"init — init","text":"initialise new project","code":""},{"path":"/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"init — init","text":"","code":"init(dir = here::here(), name = \"\", description = \"\")"},{"path":"/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"init — init","text":"dir path directory project shall initialised name project name: e.g. single_cell_lung_atlas. empty description short project description. empty","code":""},{"path":"/reference/init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"init — init","text":"Initialises new project given directory.","code":""},{"path":"/reference/init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"init — init","text":"","code":"if (FALSE) { # \\dontrun{ init(name = \"single_cell_lung_atlas\", description = \"This analysis solves all our problems!\") } # }"},{"path":"/reference/print.dsoParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom print method for dsoParams class — print.dsoParams","title":"Custom print method for dsoParams class — print.dsoParams","text":"Custom print method dsoParams class","code":""},{"path":"/reference/print.dsoParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom print method for dsoParams class — print.dsoParams","text":"","code":"# S3 method for class 'dsoParams' print(x, ...)"},{"path":"/reference/print.dsoParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom print method for dsoParams class — print.dsoParams","text":"x dsoParams object ... additional parameters ignored","code":""},{"path":"/reference/read_params.html","id":null,"dir":"Reference","previous_headings":"","what":"read_params — read_params","title":"read_params — read_params","text":"Set stage dir load parameters params.yaml","code":""},{"path":"/reference/read_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_params — read_params","text":"","code":"read_params(stage_path = NULL, return_list = FALSE)"},{"path":"/reference/read_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_params — read_params","text":"stage_path relative path stage directory project root, NULL, already set stage path taken config_environment return_list returns list TRUE, default return `dsoParams` class list secure access","code":""},{"path":"/reference/read_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_params — read_params","text":"parameters list list `dsoParams` conventional list `return_list` set.","code":""},{"path":"/reference/read_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read_params — read_params","text":"required provide path current stage relative project root ensure correct config loaded, matter current working directory (long working directory subdirectory project root). function recompiles params..yaml params.yaml --fly ensure --date params always loaded.","code":""},{"path":"/reference/reload.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload dsoParams — reload","title":"Reload dsoParams — reload","text":"Reloads current dsoParams configuration object.","code":""},{"path":"/reference/reload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload dsoParams — reload","text":"","code":"reload(params, env = caller_env())"},{"path":"/reference/reload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload dsoParams — reload","text":"params dsoParams object env environment object located, caller_env() default","code":""},{"path":"/reference/reload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload dsoParams — reload","text":"updated dsoParams object.","code":""},{"path":"/reference/repro.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproduce a dso stage — repro","title":"Reproduce a dso stage — repro","text":"Reproduce dso stage without dependencies.","code":""},{"path":"/reference/repro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reproduce a dso stage — repro","text":"","code":"repro(stage_path = stage_here(), single_stage = F)"},{"path":"/reference/repro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reproduce a dso stage — repro","text":"stage_path path stage. Defaults current stage using `stage_here()`. single_stage Logical flag indicating whether reproduce current stage (`TRUE`) current stage dependencies (`FALSE`). Defaults `FALSE`.","code":""},{"path":"/reference/repro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reproduce a dso stage — repro","text":"function reproduces stage specified `stage_path`.  `single_stage` set `TRUE`, reproduces stage without dependencies. Otherwise, reproduces current stage along dependency stages. default, current stage reproduced.","code":""},{"path":"/reference/set_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"set_stage — set_stage","title":"set_stage — set_stage","text":"Set stage dir","code":""},{"path":"/reference/set_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set_stage — set_stage","text":"","code":"set_stage(stage_path)"},{"path":"/reference/set_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set_stage — set_stage","text":"stage_path relative path stage directory project root","code":""},{"path":"/reference/set_stage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set_stage — set_stage","text":"absolute path stage","code":""},{"path":"/reference/set_stage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set_stage — set_stage","text":"required provide path current stage relative project root. stage dir set, allows use stage_here config_env variable stage_dir. get path stage use stage_here(). stage_here() return absolute path stage project root.","code":""},{"path":"/reference/show-dsoParams-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom show method for dsoParams class — show,dsoParams-method","title":"Custom show method for dsoParams class — show,dsoParams-method","text":"Custom show method dsoParams class","code":""},{"path":"/reference/show-dsoParams-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom show method for dsoParams class — show,dsoParams-method","text":"","code":"# S4 method for class 'dsoParams' show(object)"},{"path":"/reference/show-dsoParams-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom show method for dsoParams class — show,dsoParams-method","text":"object dsoParams object","code":""},{"path":"/reference/stage_here.html","id":null,"dir":"Reference","previous_headings":"","what":"stage_here — stage_here","title":"stage_here — stage_here","text":"get absolute path stage","code":""},{"path":"/reference/stage_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stage_here — stage_here","text":"","code":"stage_here(...)"},{"path":"/reference/stage_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stage_here — stage_here","text":"... additional parts path appended stage path using `file.path`","code":""},{"path":"/reference/stage_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stage_here — stage_here","text":"absolute path stage","code":""},{"path":"/reference/stage_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stage_here — stage_here","text":"Get absolute path current stage. current stage can set using set_stage() providing relative path stage project root directory. stage dir.","code":""},{"path":"/reference/sub-sub-.dsoParams.html","id":null,"dir":"Reference","previous_headings":"","what":"And the [[ operator: to add secure list calling so that it cannot return NULL when call does not exist — [[.dsoParams","title":"And the [[ operator: to add secure list calling so that it cannot return NULL when call does not exist — [[.dsoParams","text":"[[ operator:  add secure list calling return NULL call exist","code":""},{"path":"/reference/sub-sub-.dsoParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"And the [[ operator: to add secure list calling so that it cannot return NULL when call does not exist — [[.dsoParams","text":"","code":"# S3 method for class 'dsoParams' x[[i, ...]]"},{"path":"/reference/sub-sub-.dsoParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"And the [[ operator: to add secure list calling so that it cannot return NULL when call does not exist — [[.dsoParams","text":"x dsoParams object index `[[` operator ... additional arguments passed `[[` operator","code":""}]
